<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lanyuan.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="lanyuan.pojo.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <collection property="roles" column="id" select="lanyuan.mapper.RoleMapper.selectByRoleId"
                    ofType="lanyuan.pojo.Role"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, account, name, password, phone, email, status, sex, createtime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where account=#{account} and password=#{password}
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where account=#{account}
    </select>

    <select id="show" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from user
        <trim prefix="where" prefixOverrides="or">
            <if test="account!=null">
                <bind name="newaccount" value="'%'+account+'%'"/>
                or account like #{newaccount}
            </if>
            <if test="phone!=null">
                <bind name="newphone" value="'%'+phone+'%'"/>
                or phone like #{newphone}
            </if>
            <if test="name!=null">
                <bind name="newname" value="'%'+name+'%'"/>
                or name like #{newname}
            </if>
        </trim>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="lanyuan.pojo.User">
    insert into user (id, account, name, 
      password, phone, email, 
      status, sex, createtime)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP},
  </insert>
    <insert id="insertSelective" parameterType="lanyuan.pojo.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="createtime != null">
                createtime,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="lanyuan.pojo.User">
        update user
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="lanyuan.pojo.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>