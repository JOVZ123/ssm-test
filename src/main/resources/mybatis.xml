<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--根节点-->
<configuration>
    <!--参数设置-->
    <settings>
        <!--mybatis自带的日志 查看mybatis执行sql语句全过程-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--开启缓存,默认开启 是为了提高效率  查询相同的数据从缓存中获取-->
        <setting name="cacheEnabled" value="true"/>
        <!--开启延迟加载 什么时候使用 什么时候查-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--通常是为了和延迟加载功能结合使用
            如果设置true: 如果对象调用了 里面所有属性全部加载
            如果设置false: 如果对象调用了 每种属性按需加载
        -->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    <!--2.插件  可选的-->
    <plugins>
        <!--分页插件-->
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!--每一个分页插件属性-->
            <!--默认值false 设置成true 将RowsBound 中的offset 当成PageNum使用-->
            <property name="offsetAsPageNum" value="true"/>
            <!--默认值false 设置成true 会使用RowBounds进行分页查询count值-->
            <property name="rowBoundsWithCount" value="true"/>
            <!--pageSize=0 是表示是否查询全部结果 默认是false-->
            <property name="pageSizeZero" value="true"/>
            <!--分页合理化参数,如果pageNum<=0 默认查询第一页
                如果pageNum>=总页数  默认查询最后一页
            -->
            <property name="reasonable" value="true"/>
            <!--为了支持startPage(Object param) 可以配置pageNum pageSize count,pageSizeZero
            ...  如果不配做  这些属性都会有默认值
            pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
            -->
            <property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/>
            <!--支持通过Mapper接口来实现分页参数传递  bug-->
            <property name="supportMethodsArguments" value="true"/>
            <!--检测分页结束  结果类型是否是pageInfo  none: page-->
            <property name="truePageInfo" value="none"/>
        </plugin>
    </plugins>
</configuration>